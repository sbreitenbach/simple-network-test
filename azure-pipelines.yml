# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
    Python36-linux:
      python.version: '3.6'
      imageName: 'ubuntu-latest'
    Python37-linux:
      python.version: '3.7'
      imageName: 'ubuntu-latest'
    Python38-linux:
      python.version: '3.8'
      imageName: 'ubuntu-latest'
    Python39-linux:
      python.version: '3.9'
      imageName: 'ubuntu-latest'
    Python36-MacOS:
      python.version: '3.6'
      imageName: 'macOS-latest'
    Python37-macOS:
      python.version: '3.7'
      imageName: 'macOS-latest'
    Python38-macOS:
      python.version: '3.8'
      imageName: 'macOS-latest'
    Python39-macOS:
      python.version: '3.9'
      imageName: 'macOS-latest'
    Python36-Windows:
      python.version: '3.6'
      imageName: 'windows-latest'
    Python37-Windows:
      python.version: '3.7'
      imageName: 'windows-latest'
    Python38-Windows:
      python.version: '3.8'
      imageName: 'windows-latest'
    Python39-Windows:
      python.version: '3.9'
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
